{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","isTitleErrorVisible","isImgUrlErrorVisible","isImdbUrlErrorVisible","isImdbIdErrorVisible","isImgUrlInvalid","isImdbUrlInvalid","urlValidator","str","match","handleSubmit","event","onAdd","props","newMovie","preventDefault","setState","this","onSubmit","name","type","value","onChange","target","onBlur","style","border","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05a5e31b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable no-console */\nimport { Component } from 'react';\n\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void\n};\ntype State = Movie & {\n  isTitleErrorVisible: boolean;\n  isImgUrlErrorVisible: boolean;\n  isImdbUrlErrorVisible: boolean;\n  isImdbIdErrorVisible: boolean;\n  isImgUrlInvalid: boolean;\n  isImdbUrlInvalid: boolean;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isTitleErrorVisible: false,\n    isImgUrlErrorVisible: false,\n    isImdbUrlErrorVisible: false,\n    isImdbIdErrorVisible: false,\n    isImgUrlInvalid: false,\n    isImdbUrlInvalid: false,\n  };\n\n  urlValidator = (str: string) => {\n    // eslint-disable-next-line max-len\n    const validUrlRegex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    return str.match(validUrlRegex) || false;\n  };\n\n  handleSubmit = (event: { preventDefault: () => void; }) => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const { onAdd } = this.props;\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    event.preventDefault();\n\n    onAdd(newMovie);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isTitleErrorVisible,\n      isImgUrlErrorVisible,\n      isImdbUrlErrorVisible,\n      isImdbIdErrorVisible,\n      isImdbUrlInvalid,\n      isImgUrlInvalid,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={(event) => {\n          this.handleSubmit(event);\n        }}\n        className=\"form\"\n      >\n        <label className=\"form__label\">\n          Title:\n          <input\n            name=\"title\"\n            type=\"text\"\n            value={title}\n            onChange={({ target }) => {\n              this.setState({ title: target.value });\n            }}\n            onBlur={(event) => {\n              if (!event.target.value) {\n                this.setState({ isTitleErrorVisible: true });\n              } else {\n                this.setState({ isTitleErrorVisible: false });\n              }\n            }}\n            className=\"form__input\"\n            style={isTitleErrorVisible\n              ? { border: '1px solid red' }\n              : {}}\n          />\n        </label>\n\n        {isTitleErrorVisible && (\n          <p className=\"form__error\">\n            * Title is required\n          </p>\n        )}\n\n        <label className=\"form__label\">\n          Description:\n          <input\n            name=\"description\"\n            type=\"text\"\n            value={description}\n            onChange={({ target }) => {\n              this.setState({ description: target.value });\n            }}\n            className=\"form__input\"\n          />\n        </label>\n\n        <label className=\"form__label\">\n          Image URL:\n          <input\n            name=\"imgUrl\"\n            type=\"text\"\n            value={imgUrl}\n            onChange={({ target }) => {\n              this.setState({ imgUrl: target.value });\n            }}\n            onBlur={(event) => {\n              if (!event.target.value) {\n                this.setState({ isImgUrlErrorVisible: true });\n              } else {\n                this.setState({ isImgUrlErrorVisible: false });\n              }\n\n              if (this.urlValidator(event.target.value)) {\n                this.setState({ isImgUrlInvalid: false });\n              } else {\n                this.setState({ isImgUrlInvalid: true });\n              }\n            }}\n            className=\"form__input\"\n            style={isImgUrlErrorVisible || isImgUrlInvalid\n              ? { border: '1px solid red' }\n              : {}}\n          />\n        </label>\n\n        {isImgUrlErrorVisible && (\n          <p className=\"form__error\">\n            * Image URL is required\n          </p>\n        )}\n\n        {isImgUrlInvalid && (\n          <p className=\"form__error\">\n            * Image URL is not valid\n          </p>\n        )}\n\n        <label className=\"form__label\">\n          IMDB URL:\n          <input\n            name=\"imdbUrl\"\n            type=\"text\"\n            value={imdbUrl}\n            onChange={({ target }) => {\n              this.setState({ imdbUrl: target.value });\n            }}\n            onBlur={(event) => {\n              if (!event.target.value) {\n                this.setState({ isImdbUrlErrorVisible: true });\n              } else {\n                this.setState({ isImdbUrlErrorVisible: false });\n              }\n\n              if (this.urlValidator(event.target.value)) {\n                this.setState({ isImdbUrlInvalid: false });\n              } else {\n                this.setState({ isImdbUrlInvalid: true });\n              }\n            }}\n            className=\"form__input\"\n            style={isImdbUrlErrorVisible || isImdbUrlInvalid\n              ? { border: '1px solid red' }\n              : {}}\n          />\n        </label>\n\n        {isImdbUrlErrorVisible && (\n          <p className=\"form__error\">\n            * IMDB URL is required\n          </p>\n        )}\n\n        {isImdbUrlInvalid && (\n          <p className=\"form__error\">\n            * IMDB URL is not valid\n          </p>\n        )}\n\n        <label className=\"form__label\">\n          IMDB ID:\n          <input\n            name=\"imdbId\"\n            type=\"text\"\n            value={imdbId}\n            onChange={({ target }) => {\n              this.setState({ imdbId: target.value });\n            }}\n            onBlur={(event) => {\n              if (!event.target.value) {\n                this.setState({ isImdbIdErrorVisible: true });\n              } else {\n                this.setState({ isImdbIdErrorVisible: false });\n              }\n            }}\n            className=\"form__input\"\n            style={isImdbIdErrorVisible\n              ? { border: '1px solid red' }\n              : {}}\n          />\n        </label>\n\n        {isImdbIdErrorVisible && (\n          <p className=\"form__error\">\n            * IMDB ID is required\n          </p>\n        )}\n\n        <button\n          type=\"submit\"\n          className=\"form__submit\"\n          disabled={\n            (!title\n              || !imgUrl\n              || !imdbUrl\n              || !imdbId\n              || this.urlValidator(imdbUrl) === false\n              || this.urlValidator(imgUrl) === false) || false\n          }\n        >\n          Submit\n        </button>\n\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    // put your code here\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}